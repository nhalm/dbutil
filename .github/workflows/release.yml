name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
    
    - name: Run tests
      run: go test -v ./...
    
    - name: Generate changelog
      id: changelog
      run: |
        # Get the tag name
        TAG_NAME=${GITHUB_REF#refs/tags/}
        echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
        
        # Generate changelog from git commits
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
        if [ -z "$PREVIOUS_TAG" ]; then
          CHANGELOG=$(git log --pretty=format:"- %s" --reverse)
        else
          CHANGELOG=$(git log --pretty=format:"- %s" --reverse $PREVIOUS_TAG..HEAD)
        fi
        
        # Save changelog to file
        echo "## What's Changed" > changelog.md
        echo "$CHANGELOG" >> changelog.md
        
        # Also save to output
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        echo "## What's Changed" >> $GITHUB_OUTPUT
        echo "$CHANGELOG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.changelog.outputs.tag_name }}
        release_name: Release ${{ steps.changelog.outputs.tag_name }}
        body: ${{ steps.changelog.outputs.changelog }}
        draft: false
        prerelease: ${{ contains(steps.changelog.outputs.tag_name, '-') }}
    
    - name: Notify on success
      if: success()
      run: |
        echo "âœ… Release ${{ steps.changelog.outputs.tag_name }} created successfully!"
        echo "ðŸš€ Go modules users can now use: go get github.com/nhalm/dbutil@${{ steps.changelog.outputs.tag_name }}" 